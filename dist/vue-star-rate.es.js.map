{"version":3,"file":"vue-star-rate.es.js","sources":["../src/icons/IconStar.vue","../src/constants.ts","../src/composables/useGetStarSet.ts","../src/StarRating.vue"],"sourcesContent":["<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <defs>\n      <linearGradient y2=\"0%\" x2=\"100%\" y1=\"0%\" x1=\"0%\" :id=\"id\">\n        <stop stop-color=\"#f9d949\" :offset=\"offsetPercentage + '%'\" id=\"F1gst1\" />\n        <stop stop-color=\"#d2d5da\" offset=\"0%\" id=\"F1gst2\" />\n      </linearGradient>\n    </defs>\n    <path\n      :fill=\"'url(#' + id + ')'\"\n      d=\"M 30.335938 12.546875 L 20.164063 11.472656 L 16 2.132813 L 11.835938 11.472656 L 1.664063 12.546875 L 9.261719 19.394531 L 7.140625 29.398438 L 16 24.289063 L 24.859375 29.398438 L 22.738281 19.394531 Z\"\n    />\n  </svg>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from \"vue\";\ndefineProps({\n  offsetPercentage: {\n    required: false,\n    default: 0\n  }\n});\n\nconst id = computed(() => 'F1g-' + parseFloat((Math.random() * 100).toString()).toFixed(0));\n</script>","export const DEFAULT_STAR_AMOUNT = 5;","import { ref } from \"vue\";\nimport { DEFAULT_STAR_AMOUNT } from \"../constants\";\n\nexport const useGetStarSet = (starSet: number) => {\n  const starsSet = ref<number[]>([]);\n\n  const generate = (score: number) => {\n    const scoreHalved = starSet === 5 ? score : score / 2;\n    const fillCount = Math.floor(scoreHalved);\n    let remainder = 0\n    if (scoreHalved % 1 !== 0) {\n      remainder = Number(parseFloat((scoreHalved % 1).toString()).toFixed(2));\n    }\n\n    const remainderPercentage = remainder * 100;\n    const stars: number[] = [];\n    for (let i = 0; i < fillCount; i++) {\n      stars.push(100);\n    }\n    stars.push(remainderPercentage);\n\n    [...Array(DEFAULT_STAR_AMOUNT).keys()].forEach((index) => {\n      starsSet.value[index] = stars[index];\n    });\n  }\n\n  return {\n    generate,\n    starsSet\n  };\n};","<style>\n.rating__container {\n  display: flex;\n  flex-direction: row;\n}\n\n.rating__container > .rating__star {\n  cursor: pointer;\n}\n\n.rating__container.rating__container--readonly > .rating__star {\n  cursor: default;\n}\n\n.rating__star {\n  width: 6rem;\n}\n</style>\n\n<template>\n  <div data-test=\"star-container\" class=\"rating__container\" :class=\"{ 'rating__container--readonly': props.starSet === 10 }\">\n    <div v-for=\"(star, i) in starsSet\" :key=\"i\" class=\"rating__star\">\n      <IconStar data-test=\"star\"\n                :data-star=\"i\"\n                :offset-percentage=\"star\"\n                @mouseenter.native=\"hovering($event, true)\"\n                @mouseleave.native=\"hovering($event, false)\"\n                @click=\"handleStarClick(i)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, ref, watch } from \"vue\";\nimport IconStar from \"./icons/IconStar.vue\";\nimport { useGetStarSet } from \"./composables/useGetStarSet\";\nimport { DEFAULT_STAR_AMOUNT } from \"./constants\";\n\nconst props = defineProps({\n  modelValue: {\n    type: Number,\n    default: 0\n  },\n  score: {\n    type: Number,\n    default: 0\n  },\n  starSet: {\n    type: Number,\n    default: 5\n  }\n});\n\nconst scoreValue = ref<number>(0)\nconst { starsSet, generate } = useGetStarSet(props.starSet)\n\n\nconst emits = defineEmits<{\n  (e: \"valueChange\", value: number): void;\n  (e: \"update:modelValue\", value: number): void;\n}>();\n\nconst handleStarClick = (index: number) => {\n  if (props.starSet === 5) {\n    const score = index + 1;\n    emits(\"valueChange\", score);\n    emits(\"update:modelValue\", score);\n    scoreValue.value = score;\n  }\n}\n\nconst hovering = (el: MouseEvent, hovering: boolean) => {\n  let starAttr = (el.target as HTMLElement).dataset.star;\n  if (starAttr && hovering) {\n    const starNr = +starAttr;\n\n    requestAnimationFrame(() => {\n      [...Array(DEFAULT_STAR_AMOUNT).keys()].forEach((star, index) => {\n        starsSet.value[index] = index <= starNr ? 100 : 0;\n      })\n    })\n  } else {\n    generate(scoreValue.value);\n  }\n}\n\nwatch([() => props.score, () => props.modelValue], (value) => {\n  generate(value[1]);\n})\n\nonMounted(() => {\n  scoreValue.value = props.score || props.modelValue;\n  generate(scoreValue.value);\n})\n</script>\n"],"names":["c","f"],"mappings":"4dAwBA,KAAM,GAAK,EAAS,IAAM,OAAS,WAAiB,MAAA,OAAA,EAAW,KAAK,SAAU,CAAA,EAAE,QAAQ,CAAC,CAAC,+cCxBvD,EAAA,ECGtB,EAAgB,GAAqB,CAChD,KAAiB,GAAAA,EAAc,CAAE,CAAA,EAsBjC,MAAO,CACL,SArBe,GAAmB,CAClC,KAAoB,GAAA,IAAY,EAAI,EAAQ,EAAQ,EAC9C,EAAY,KAAK,MAAM,CAAW,EACxC,GAAgB,GAAA,EAChB,EAAkB,IAAM,GACV,GAAA,OAAO,WAA0B,GAAA,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC,GAGxE,KAAM,GAAsB,EAAY,IAClC,EAAkB,CAAA,EACxB,UAAa,EAAG,EAAI,EAAW,IAC7B,EAAM,KAAK,GAAG,EAEhB,EAAM,KAAK,CAAmB,EAE9B,CAAC,GAAG,MAAMC,CAAmB,EAAE,KAAM,CAAA,EAAE,QAAQ,GAAW,CACxD,EAAS,MAAM,GAAS,EAAM,EAChC,CAAC,CACH,EAIE,UACF,CACF,yNCwBM,EAAa,EAAY,CAAC,EAC1B,CAAE,WAAU,YAAa,EAAc,EAAM,OAAO,EAQpD,EAAkB,AAAC,GAAkB,CACrC,GAAA,EAAM,UAAY,EAAG,CACvB,KAAM,GAAQ,EAAQ,EACtB,EAAM,cAAe,CAAK,EAC1B,EAAM,oBAAqB,CAAK,EAChC,EAAW,MAAQ,CACrB,CAAA,EAGI,EAAW,CAAC,EAAgB,IAAsB,CAClD,GAAA,GAAY,EAAG,OAAuB,QAAQ,KAClD,GAAI,GAAY,EAAU,CACxB,KAAM,GAAS,CAAC,EAEhB,sBAAsB,IAAM,CACzB,CAAA,GAAG,MAAM,CAAmB,EAAE,KAAM,CAAA,EAAE,QAAQ,CAAC,EAAM,IAAU,CAC9D,EAAS,MAAM,GAAS,GAAS,EAAS,IAAM,CAAA,CACjD,CAAA,CACF,CAAA,KAED,GAAS,EAAW,KAAK,CAC3B,EAGI,SAAA,CAAC,IAAM,EAAM,MAAO,IAAM,EAAM,UAAU,EAAG,AAAC,GAAU,CAC5D,EAAS,EAAM,EAAE,CAAA,CAClB,EAED,EAAU,IAAM,CACH,EAAA,MAAQ,EAAM,OAAS,EAAM,WACxC,EAAS,EAAW,KAAK,CAAA,CAC1B"}